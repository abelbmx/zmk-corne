/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * Para la ñ es con Lower lef alt + 164 ᕕ( ᐛ )ᕗ
 * 
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)
#include "helper.h"
#include "spanish.dtsi"


#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#include <dt-bindings/led/led.h>


// TAP_DANCE settings
#define TAP_SPEED 200

// MACROS to make the the code easier to read
// include name or reference in keymap
// Format: 
//      name        reference  key1 key2 
#define TD_TAB      &td0    // TAB ESC
#define TD_CAPLOCK  &td1    // LSHIFT CAPSLOCK 
#define TD_SPC      &td2    // SPACE ENTER 
#define TD_SLSH     &td3    // SLASH QMARK
#define TD_QUOTE    &td4    // QUOTE DOUBLE_QUOTES
#define TD_EQL      &td5    // EQUAL PLUS
#define TD_BSLS     &td6    // BACKSLASH PIPE 
#define TD_MINUS    &td7    // MINUS UNDERSCORE
#define TD_SCLN     &td8    // SEMICOLON COLON 
#define TD_COMM     &td9    // COMMA LESS_THAN 
#define TD_DOT      &td10   // PERIOD GREATER_THAN 
#define TD_BACKF    &td11   // GRAVE TILDE
#define TD_ALT      &td12   // LALT GUI
#define TD_ARR      &td13   // Q AT (@)
#define TD_ATCAT    &td14   // AT CARET 
#define TD_TAW      &td15   // TAB LWIN
#define TD_SCLOCK   &td16   // (S)LSHIFT CAPSLOCK (Sticky shift)

// include &name in keymap to use
// FORMAT
//   natural --> (on shift)
//   number --> symbols | number code --> symbol code 
// one_lpar    1 --> (  | N1 --> LPAR
// two_par     2 --> )  | N2 --> RPAR
// three_rbrc  3 --> }  | N3 --> RBRC
// four_pl     4 --> ]  | N4 --> PLUS
// five_lbrc   5 --> {  | N5 --> RSFT
// six_rbkt    6 --> ]  | N6 --> RBKT
// seven_lbkt  7 --> [  | N7 --> LBKT
// eight_exlm  8 --> !  | N8 --> EXCL
// nine_equal  9 --> =  | N9 --> EQUAL
// zero_s      0 --> *  | N0 --> STAR


/*
// Sticky key config if desired
&sk {
    //release-after-ms = <2000>;
    quick-release;
}
*/

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <27>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};

/ {
	chosen {
		zmk,underglow = &led_strip;

	};
};

/ {
    macros {
        zed_em_kay: zed_em_kay {
            label = "ZM_zed_em_kay";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_4>
                , <&macro_release &kp LALT>
                ;
        };

        pregunta: pregunta {
            label = "Pregunta";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_8>
                , <&macro_release &kp LALT>
                ;
        };
        exclamacion: exclamacion {
            label = "Exclamacion";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_3>
                , <&macro_release &kp LALT>
                ;
        };

        screen_cap: screen_cap {
            label = "Screen_Cap";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHFT &kp S>
                , <&macro_release &kp LGUI &kp LSHFT &kp S>
                ;
        };

        task_manager: task_manager {
            label = "Task_Manager";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT &kp DEL>
                ;
        };
    };


    behaviors{  
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp TAB>, <&kp ESC>;

            }; 
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
            }; 
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SPACE>, <&kp ENTER>;
            }; 
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SLASH>, <&kp QMARK>;
            }; 
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
            }; 
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp EQUAL>, <&kp PLUS>;
            }; 
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp BACKSLASH>, <&kp PIPE>;
            }; 
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;
            }; 
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SEMICOLON>, <&kp COLON>;
            }; 
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp COMMA>, <&kp LESS_THAN>;
            }; 
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_10"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;
            }; 
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_11"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp GRAVE>, <&kp TILDE>;
            };            

        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_12"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp LALT>, <&kp GUI>;
            };
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_13"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp Q>, <&kp AT>;
            };
        td14: tap_dance_14 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_14"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp AT>, <&kp CARET>;
            };
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_15"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp TAB>, <&kp LWIN>;
            };
        td16: tap_dance_16 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_16"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&sk LSHIFT>, <&kp CAPSLOCK>;
            }; 

        // create the shifts of dvorak 
        seven_lbkt: seven_lbkt{ 
                compatible = "zmk,behavior-mod-morph";
                label="SEVEN_LBKT";
                #binding-cells = <0>;
                bindings = <&kp N7>, <&kp LBKT>;  
                mods=<(MOD_LSFT|MOD_RSFT)>;
            }; 
        five_lbrc: five_lbrc {
                compatible = "zmk,behavior-mod-morph";
                label="FIVE_LBRC";
                #binding-cells = <0>; 
                bindings = <&kp N5>,<&kp LBRC>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        three_rbrc: three_rbrc {
                compatible = "zmk,behavior-mod-morph";
                label="THREE_RBRC";
                #binding-cells = <0>; 
                bindings = <&kp N3>,<&kp RBRC>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        one_lpar: one_lpar {
                compatible = "zmk,behavior-mod-morph";
                label="ONE_LPAR";
                #binding-cells = <0>; 
                bindings = <&kp N1>,<&kp LPAR>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        nine_equal: nine_equal {
                compatible = "zmk,behavior-mod-morph";
                label="nine_equal";
                #binding-cells = <0>; 
                bindings = <&kp N9>,    <&kp EQUAL>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        zero_s: zero_star { 
                compatible = "zmk,behavior-mod-morph";
                label="ZERO_STAR";
                #binding-cells = <0>;
                bindings = <&kp N0>, <&kp STAR>;  
                mods=<(MOD_LSFT|MOD_RSFT)>;
            }; 
        two_par: two_paren {
                compatible = "zmk,behavior-mod-morph";
                label="TWO_PAR";
                #binding-cells = <0>; 
                bindings = <&kp N2>,<&kp RPAR>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        four_pl: four_plus {
                compatible = "zmk,behavior-mod-morph";
                label="FOUR_PLUS";
                #binding-cells = <0>; 
                bindings = <&kp N4>,<&kp PLUS>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        six_rbkt: six_rbkt {
                compatible = "zmk,behavior-mod-morph";
                label="six_rbkt";
                #binding-cells = <0>; 
                bindings = <&kp N6>,<&kp RBKT>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        eight_exlm: eight_exlm {
                compatible = "zmk,behavior-mod-morph";
                label="EIGHT_EXLM";
                #binding-cells = <0>; 
                bindings = <&kp N8>,    <&kp EXCL>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
            &kp TAB     &kp Q   &kp W      &kp E   &kp R      &kp T            &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSPC
            &kp LSHFT   &kp A   &kp S      &kp D   &kp F      &kp G            &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
            &kp LCTRL   &kp Z   &kp X      &kp C   &kp V      &kp B            &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                        &kp LALT   &mo 1  &kp SPACE            &kp RET  &mo 2   &kp RALT
                        >;
        };

        Lower {
            // --------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |   3   |   4  |   5  |   |  7  |  8  |  9  |  0  | HOME | SCP |
            // | LSHFT | F2   |  up  |  F4   |  F5  |   6  |   |  4  |  5  |  6  | END |   ñ  | F10 |
            // | LALT  | left | down | right |  -   |  +   |   |  1  |  2  |  3  |  .  |  NL  | RSH |
            //                       | GUI   |      | SPC  |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
            &bt BT_CLR       &kp NUMBER_1   &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4    &kp NUMBER_5        &kp KP_NUMBER_7   &kp KP_NUMBER_8    &kp KP_NUMBER_9    &kp NUMBER_0  &kp HOME        &kp BSPC
            &kp LSHFT   &kp F2         &kp UP          &kp F4          &kp F5          &kp NUMBER_6        &kp KP_NUMBER_4   &kp KP_NUMBER_5    &kp KP_NUMBER_6    &kp END       &zed_em_kay     &kp F10
            &kp LALT    &kp LEFT       &kp DOWN        &kp RIGHT       &kp MINUS       &kp PLUS            &kp KP_NUMBER_1   &kp KP_NUMBER_2    &kp KP_NUMBER_3    &kp DOT       &kp KP_NUMLOCK  &screen_cap
                                       &kp LGUI        &trans          &kp LCTRL                           &kp RET  &mo 3    &kp RALT
            >;
        };

        Raise {
            // --------------------------------------------------------------------------------
            // |  BT0  |  !  |  "  |  £  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // |  BT1  | PgUp|     |     |     |     |   |  -  |  =  |  [  |  ]  |  #  |  F11 |
            // |  BT2  | PgDw|  ¿  |  ¡  | task| "|" |   |  _  |  +  |  {  |  }  | "~" |  ¬   |
            //                     | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
            &td1     &kp EXCL      &kp AT       &kp HASH        &kp DLLR         &kp PRCNT        &kp CARET      &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp DEL
            &td6     &kp PG_UP     &bt BT_PRV   &bt BT_NXT      &kp LGUI         &to 3            &kp UNDER      &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH   &kp F11
            &bt BT_SEL 0      &kp PG_DN     &pregunta    &exclamacion    &task_manager    &kp PIPE         &kp MINUS      &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE   &kp TILDE
                                                         &kp LCTRL       &kp LEFT_ALT     &kp SPACE        &bt BT_SEL 0   &trans      &bt BT_CLR   
            >;
        };
        
        Config {
            // ------------------------------------------------------------------------------------------------------------
            // |  F1  |   F2   |   F3  |  F4   |  F5   |   F6  |       |   F7   |  F8   |   F9  |  F10  |   F11 |   F12   |
            // |OUT_USB|OUT_BLE|OUT_TOG|BT_CLR |BT_PRV | BT_NXT|       |RGBSAT- |RGBSAT+|       |CLICK_1| UP    |CLICK_2  |
            // |BT_CLR |BT_0   |BT_1   |BT_2   |BT_3   |BT_4   |       |RGBHUE- |RGBHUE+| RESET | LEFT  | DOWN  | RIGHT   |
            //                         |EP_ON  | EP_OFF|EP_TOG |       |RGBANI- |RGBANI+|   RGBTOG      |

            label = "Config";
            bindings = <
            &kp F1                &kp F2                &kp F3           &kp F4             &kp F5           &kp F6          &kp F7              &kp F8             &kp F9                 &kp F10              &kp F11           &kp F12
            &out OUT_USB    &out OUT_BLE          &out OUT_TOG            &to 3         &bt BT_PRV           &bt BT_NXT      &rgb_ug RGB_SAD     &rgb_ug RGB_SAI    &rgb_ug RGB_EFF        &rgb_ug RGB_TOG      &kp K_PP          &none
            &bt BT_CLR      &bt BT_SEL 0          &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3           &bt BT_SEL 4    &rgb_ug RGB_BRD     &rgb_ug RGB_BRI    &rgb_ug RGB_EFR        &rgb_ug RGB_HUD      &rgb_ug RGB_HUI   &none
                                                                      &kp LCTRL              &to 4           &kp LEFT_ALT    &none               &none              &none
            >;
        };

        Dvorak {
            // -----------------------------------------------------------------------------------------
            // |TAB:ESC   | ; : | , < | . > |  P  |  Y  |         | F   |  G   |  C  |  R  |  L  | BKSP |
            // | CTRL     |  A  |  O  |  E  |  U  |  I  |         |  D  |  H   |  T  |  N  |  S  |  DEL |
            // | LSFT:CAP |' "  | q @ | J   | K   |  X  |         |  B  |  M   |  W  |  V  |  Z  | TAB  |
            //                        | GUI | LWR | SPC |         | ENT | RSE  | ALT |
            label = "Dvorak";
                                    bindings = <
            TD_TAB     TD_SCLN  TD_COMM  TD_DOT &kp P &kp Y                   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
            &kp LCTRL  &kp A    &kp O    &kp E  &kp U &kp I                   &kp D &kp H  &kp T     &kp N   &kp S    &kp DEL
            TD_SCLOCK  TD_QUOTE TD_ARR   &kp J  &kp K &kp X                   &kp B &kp M  &kp W     &kp V   &kp Z    TD_TAW
                                      TD_ALT  &to 0 TD_SPC                   TD_SPC &mo 1 &kp RALT
                                    >;
        };
    };
};


&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};
 